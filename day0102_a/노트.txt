MVC 패턴
==> 전통적인 웹 어플리케이션은
하나의 jsp에서 모든것이 처리되는 것
사용자가 서비스 요청을 jsp에게 하고
그 요청에 따른 일처리도 jsp가 하고
또 처리된 결과에 따른 보여주기 역할도 jsp가 한다

이러한 방식은 웹 초기에는 편리하였지만
시간이 흐름에 따라 점점 사용자가 요구가 복잡해지고
프로젝트 규모가 커짐에 따라
하나의 jsp에서 모든 것을 처리하는 것은
소스코드의 가독성이 떨어져
협업이나 유지보수에 어려움이 있다

이러한 문제를 해결하기 위한 방법으로
채택된 방식이 MVC 패턴이다.

사용자가 jsp에 직접 서비스를 요청하는 것이 아니라
Controller역할을 하는 서블릿에게 요청을 하고

그 요청에 따른 일처리를 위한 별도의 자바클래서(Model)이 일을 수행하고

그 처리된 결과에 따라
보여주기 역할은(View) jsp가 수행하는 방식이다.

이렇게 하게 되면
jsp에서는 자바 문법이 사라지게 되고
html만으로 표현할 수 있으며
모든 일처리는 자바클래스에게 맡김으로써
소스코드의 가독성을 높일 수 있어
협업이나 유지보수가 용이하다.

M : Model			사용자의 요청에 따른 일처리를 위한 클래스
					혹은 요청에 따른 처리된 결과의 데이터를 말한다.

V : View			처리된 결과를 보여주기 위한 역할을 담당하는 jsp를 말한다.

C : Controller		사용자의 요청을 받아들이는 서블릿을 말한다.

---------------------------------------------------------------------------

Front Controller 	사용자의 모든 요청을 받아들이는 서블릿을 말한다.

SistController

listBoard.do
insertBoard.do
insertBoardOK.do
updateBoard.do
updateBoardOK.do
deleteBoard.do
deleteBoardOK.do




-----------------------------------------------------------------------------

Front Controller의 내용이 다음처럼 수정되었다
각각의 요청에 따른 일처리 담당을 할 Action클래스를 만들고
해당 클래스에게 일을 맡김으로써 소스코드가 간결해졌습니다.

그러나 여전히 복잡한 if문으로 구성되어 있고
만약에 새로운 서비스가 등록될 때 마다 if 조건식이 추가되어야 한다

이것을 어떻게 하면 간결하게 할 수 있을까?

==> Map을 이용하여 해결해보자





